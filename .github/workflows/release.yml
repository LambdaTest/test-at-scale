name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:

  Release:

    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        label: ${{ github.event.pull_request.labels.*.name }}

    steps:

      - if: startsWith(matrix.label, 'release:')
        name: Retrieving Release Type
        run: |
          release_type=`echo ${{matrix.label}} | awk -F':' '{print $NF}'`
          echo "RELEASE_TYPE=${release_type}" >> $GITHUB_ENV
          echo "Releasing: ${release_type}"

      - if: startsWith(matrix.label, 'release:')
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - if: startsWith(matrix.label, 'release:')
        name: Checkout
        uses: actions/checkout@v2.4.0

      - if: startsWith(matrix.label, 'release:')
        name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.RELEASE_TYPE }}

      - if: startsWith(matrix.label, 'release:')
        name: Build Cloud Runners
        run: |
          curl -X POST -H "Authorization:Bearer ${{ secrets.GH_API_TOKEN }}" ${{ secrets.WF_URL }} -d '${{ secrets.WF_INPUTS }}'

      - if: startsWith(matrix.label, 'release:')
        name: Setup Environment
        run: |
          echo "BOTNAME=Test-at-Scale Deployment Status: Version ${{ steps.tag_version.outputs.new_tag }} to stage" >> $GITHUB_ENV

      - if: startsWith(matrix.label, 'release:')
        name: Setup Docker Image Tags
        run: |
          echo "NUCLEUS_TAGS=${REGISTRY_NAME}/nucleus:stage-base","${REGISTRY_NAME}/nucleus:${{ steps.tag_version.outputs.new_tag }}-base" >> $GITHUB_ENV
          echo "SYNAPSE_TAGS=${REGISTRY_NAME}/synapse:stage","${REGISTRY_NAME}/synapse:${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV

      - if: startsWith(matrix.label, 'release:')
        name: Docker Login
        uses: docker/login-action@v1.13.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          logout: true

      - if: startsWith(matrix.label, 'release:')
        name: Build and push Nucleus images
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          tags: ${{ env.NUCLEUS_TAGS }}
          file: build/nucleus/Dockerfile
          push: true

      - if: startsWith(matrix.label, 'release:')
        name: Build and push Synapse images
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          tags: ${{ env.SYNAPSE_TAGS }}
          file: build/synapse/Dockerfile
          push: true

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: ${{ env.BOTNAME }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() && startsWith(matrix.label, 'release:')