{"id":6029114,"iid":15335,"project_id":13083,"title":"Backport of add-epic-sidebar","description":"## What does this MR do?\nBackport of https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/3253\n\n## Are there points in the code the reviewer needs to double check?\nShouldn't be\n\n## Why was this MR needed?\nBackport of some new shared components and CSS changes\n\n## Screenshots (if relevant)\nNone\n\n## Does this MR meet the acceptance criteria?\n\n- Review\n  - [ ] Has been reviewed by Frontend\n\n## What are the relevant issue numbers?\nhttps://gitlab.com/gitlab-org/gitlab-ee/issues/3556","state":"merged","created_at":"2017-11-10T23:43:47.392Z","updated_at":"2021-11-08T17:39:14.329Z","merged_by":{"id":502136,"username":"fatihacet","name":"Fatih Acet","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/502136/avatar.png","web_url":"https://gitlab.com/fatihacet"},"merge_user":{"id":502136,"username":"fatihacet","name":"Fatih Acet","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/502136/avatar.png","web_url":"https://gitlab.com/fatihacet"},"merged_at":"2017-11-27T20:22:01.043Z","closed_by":null,"closed_at":null,"target_branch":"master","source_branch":"backport-add-epic-sidebar","user_notes_count":20,"upvotes":0,"downvotes":0,"author":{"id":408677,"username":"ClemMakesApps","name":"Clement Ho","state":"active","avatar_url":"https://secure.gravatar.com/avatar/013b4af8b474654bce8039ecd262a84a?s=80\u0026d=identicon","web_url":"https://gitlab.com/ClemMakesApps"},"assignees":[{"id":502136,"username":"fatihacet","name":"Fatih Acet","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/502136/avatar.png","web_url":"https://gitlab.com/fatihacet"}],"assignee":{"id":502136,"username":"fatihacet","name":"Fatih Acet","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/502136/avatar.png","web_url":"https://gitlab.com/fatihacet"},"reviewers":[],"source_project_id":13083,"target_project_id":13083,"labels":["Category:Portfolio Management","epics","frontend"],"draft":false,"work_in_progress":false,"milestone":{"id":349702,"iid":2,"group_id":9970,"title":"10.2","description":"","state":"closed","created_at":"2017-07-24T13:53:41.702Z","updated_at":"2018-03-22T16:15:32.616Z","due_date":"2017-11-22","start_date":"2017-10-08","expired":true,"web_url":"https://gitlab.com/groups/gitlab-org/-/milestones/2"},"merge_when_pipeline_succeeds":false,"merge_status":"can_be_merged","sha":"fe93f9827537e4d761b1874218b009668a914ae4","merge_commit_sha":"f8de23e626f7a1d0b2f80f996a5f129323adc970","squash_commit_sha":null,"discussion_locked":null,"should_remove_source_branch":null,"force_remove_source_branch":true,"reference":"!15335","references":{"short":"!15335","relative":"!15335","full":"gitlab-org/gitlab-foss!15335"},"web_url":"https://gitlab.com/gitlab-org/gitlab-foss/-/merge_requests/15335","time_stats":{"time_estimate":0,"total_time_spent":0,"human_time_estimate":null,"human_total_time_spent":null},"squash":false,"task_completion_status":{"count":1,"completed_count":0},"has_conflicts":false,"blocking_discussions_resolved":true,"approvals_before_merge":null,"subscribed":false,"changes_count":"17","latest_build_started_at":"2017-11-17T17:09:10.405Z","latest_build_finished_at":null,"first_deployed_to_production_at":null,"pipeline":{"id":14073346,"iid":null,"project_id":13083,"sha":"fe93f9827537e4d761b1874218b009668a914ae4","ref":"backport-add-epic-sidebar","status":"failed","source":"push","created_at":"2017-11-17T16:53:22.068Z","updated_at":"2017-11-20T16:20:53.290Z","web_url":"https://gitlab.com/gitlab-org/gitlab-foss/-/pipelines/14073346"},"head_pipeline":{"id":14073346,"iid":null,"project_id":13083,"sha":"fe93f9827537e4d761b1874218b009668a914ae4","ref":"backport-add-epic-sidebar","status":"failed","source":"push","created_at":"2017-11-17T16:53:22.068Z","updated_at":"2017-11-20T16:20:53.290Z","web_url":"https://gitlab.com/gitlab-org/gitlab-foss/-/pipelines/14073346","before_sha":"fe93f9827537e4d761b1874218b009668a914ae4","tag":false,"yaml_errors":null,"user":{"id":408677,"username":"ClemMakesApps","name":"Clement Ho","state":"active","avatar_url":"https://secure.gravatar.com/avatar/013b4af8b474654bce8039ecd262a84a?s=80\u0026d=identicon","web_url":"https://gitlab.com/ClemMakesApps"},"started_at":"2017-11-17T17:09:10.405Z","finished_at":"2017-11-20T16:20:53.246Z","committed_at":null,"duration":3272,"queued_duration":948,"coverage":"53.62","detailed_status":{"icon":"status_failed","text":"failed","label":"failed","group":"failed","tooltip":"failed","has_details":false,"details_path":"/gitlab-org/gitlab-foss/-/pipelines/14073346","illustration":null,"favicon":"/assets/ci_favicons/favicon_status_failed-41304d7f7e3828808b0c26771f0309e55296819a9beea3ea9fbf6689d9857c12.png"}},"diff_refs":{"base_sha":"2f74b1d32392427ce9cc3c0aff205c8991ba2dfc","head_sha":"fe93f9827537e4d761b1874218b009668a914ae4","start_sha":"c406824d319e5b1a073af7cf55c3f24bfa66e2a4"},"merge_error":"Merge request is not mergeable","user":{"can_merge":false},"changes":[{"old_path":"app/assets/javascripts/lib/utils/datetime_utility.js","new_path":"app/assets/javascripts/lib/utils/datetime_utility.js","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/app/assets/javascripts/lib/utils/datetime_utility.js\n+++ b/app/assets/javascripts/lib/utils/datetime_utility.js\n@@ -150,3 +150,17 @@ export function timeIntervalInWords(intervalInSeconds) {\n   }\n   return text;\n }\n+\n+export function dateInWords(date, abbreviated = false) {\n+  if (!date) return date;\n+\n+  const month = date.getMonth();\n+  const year = date.getFullYear();\n+\n+  const monthNames = [s__('January'), s__('February'), s__('March'), s__('April'), s__('May'), s__('June'), s__('July'), s__('August'), s__('September'), s__('October'), s__('November'), s__('December')];\n+  const monthNamesAbbr = [s__('Jan'), s__('Feb'), s__('Mar'), s__('Apr'), s__('May'), s__('Jun'), s__('Jul'), s__('Aug'), s__('Sep'), s__('Oct'), s__('Nov'), s__('Dec')];\n+\n+  const monthName = abbreviated ? monthNamesAbbr[month] : monthNames[month];\n+\n+  return `${monthName} ${date.getDate()}, ${year}`;\n+}\n"},{"old_path":"app/assets/javascripts/lib/utils/text_utility.js","new_path":"app/assets/javascripts/lib/utils/text_utility.js","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/app/assets/javascripts/lib/utils/text_utility.js\n+++ b/app/assets/javascripts/lib/utils/text_utility.js\n@@ -55,3 +55,12 @@ export const slugify = str =\u003e str.trim().toLowerCase();\n  */\n export const truncate = (string, maxLength) =\u003e `${string.substr(0, (maxLength - 3))}...`;\n \n+/**\n+ * Capitalizes first character\n+ *\n+ * @param {String} text\n+ * @return {String}\n+ */\n+export function capitalizeFirstCharacter(text) {\n+  return `${text[0].toUpperCase()}${text.slice(1)}`;\n+}\n"},{"old_path":"app/assets/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon.vue","new_path":"app/assets/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon.vue","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/app/assets/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon.vue\n@@ -0,0 +1,46 @@\n+\u003cscript\u003e\n+  export default {\n+    name: 'collapsedCalendarIcon',\n+    props: {\n+      containerClass: {\n+        type: String,\n+        required: false,\n+        default: '',\n+      },\n+      text: {\n+        type: String,\n+        required: false,\n+        default: '',\n+      },\n+      showIcon: {\n+        type: Boolean,\n+        required: false,\n+        default: true,\n+      },\n+    },\n+    methods: {\n+      click() {\n+        this.$emit('click');\n+      },\n+    },\n+  };\n+\u003c/script\u003e\n+\n+\u003ctemplate\u003e\n+  \u003cdiv\n+    :class=\"containerClass\"\n+    @click=\"click\"\n+  \u003e\n+    \u003ci\n+      v-if=\"showIcon\"\n+      class=\"fa fa-calendar\"\n+      aria-hidden=\"true\"\n+    \u003e\n+    \u003c/i\u003e\n+    \u003cslot\u003e\n+      \u003cspan\u003e\n+        {{ text }}\n+      \u003c/span\u003e\n+    \u003c/slot\u003e\n+  \u003c/div\u003e\n+\u003c/template\u003e\n"},{"old_path":"app/assets/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker.vue","new_path":"app/assets/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker.vue","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/app/assets/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker.vue\n@@ -0,0 +1,109 @@\n+\u003cscript\u003e\n+  import { dateInWords } from '../../../lib/utils/datetime_utility';\n+  import toggleSidebar from './toggle_sidebar.vue';\n+  import collapsedCalendarIcon from './collapsed_calendar_icon.vue';\n+\n+  export default {\n+    name: 'sidebarCollapsedGroupedDatePicker',\n+    props: {\n+      collapsed: {\n+        type: Boolean,\n+        required: false,\n+        default: true,\n+      },\n+      showToggleSidebar: {\n+        type: Boolean,\n+        required: false,\n+        default: false,\n+      },\n+      minDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      maxDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      disableClickableIcons: {\n+        type: Boolean,\n+        required: false,\n+        default: false,\n+      },\n+    },\n+    components: {\n+      toggleSidebar,\n+      collapsedCalendarIcon,\n+    },\n+    computed: {\n+      hasMinAndMaxDates() {\n+        return this.minDate \u0026\u0026 this.maxDate;\n+      },\n+      hasNoMinAndMaxDates() {\n+        return !this.minDate \u0026\u0026 !this.maxDate;\n+      },\n+      showMinDateBlock() {\n+        return this.minDate || this.hasNoMinAndMaxDates;\n+      },\n+      showFromText() {\n+        return !this.maxDate \u0026\u0026 this.minDate;\n+      },\n+      iconClass() {\n+        const disabledClass = this.disableClickableIcons ? 'disabled' : '';\n+        return `block sidebar-collapsed-icon calendar-icon ${disabledClass}`;\n+      },\n+    },\n+    methods: {\n+      toggleSidebar() {\n+        this.$emit('toggleCollapse');\n+      },\n+      dateText(dateType = 'min') {\n+        const date = this[`${dateType}Date`];\n+        const dateWords = dateInWords(date, true);\n+        const parsedDateWords = dateWords ? dateWords.replace(',', '') : dateWords;\n+\n+        return date ? parsedDateWords : 'None';\n+      },\n+    },\n+  };\n+\u003c/script\u003e\n+\n+\u003ctemplate\u003e\n+  \u003cdiv class=\"block sidebar-grouped-item\"\u003e\n+    \u003cdiv\n+      v-if=\"showToggleSidebar\"\n+      class=\"issuable-sidebar-header\"\n+    \u003e\n+      \u003ctoggle-sidebar\n+        :collapsed=\"collapsed\"\n+        @toggle=\"toggleSidebar\"\n+      /\u003e\n+    \u003c/div\u003e\n+    \u003ccollapsed-calendar-icon\n+      v-if=\"showMinDateBlock\"\n+      :container-class=\"iconClass\"\n+      @click=\"toggleSidebar\"\n+    \u003e\n+      \u003cspan class=\"sidebar-collapsed-value\"\u003e\n+        \u003cspan v-if=\"showFromText\"\u003eFrom\u003c/span\u003e\n+        \u003cspan\u003e{{ dateText('min') }}\u003c/span\u003e\n+      \u003c/span\u003e\n+    \u003c/collapsed-calendar-icon\u003e\n+    \u003cdiv\n+      v-if=\"hasMinAndMaxDates\"\n+      class=\"text-center sidebar-collapsed-divider\"\n+    \u003e\n+      -\n+    \u003c/div\u003e\n+    \u003ccollapsed-calendar-icon\n+      v-if=\"maxDate\"\n+      :container-class=\"iconClass\"\n+      :show-icon=\"!minDate\"\n+      @click=\"toggleSidebar\"\n+    \u003e\n+      \u003cspan class=\"sidebar-collapsed-value\"\u003e\n+        \u003cspan v-if=\"!minDate\"\u003eUntil\u003c/span\u003e\n+        \u003cspan\u003e{{ dateText('max') }}\u003c/span\u003e\n+      \u003c/span\u003e\n+    \u003c/collapsed-calendar-icon\u003e\n+  \u003c/div\u003e\n+\u003c/template\u003e\n"},{"old_path":"app/assets/javascripts/vue_shared/components/sidebar/date_picker.vue","new_path":"app/assets/javascripts/vue_shared/components/sidebar/date_picker.vue","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/app/assets/javascripts/vue_shared/components/sidebar/date_picker.vue\n@@ -0,0 +1,163 @@\n+\u003cscript\u003e\n+  import datePicker from '../pikaday.vue';\n+  import loadingIcon from '../loading_icon.vue';\n+  import toggleSidebar from './toggle_sidebar.vue';\n+  import collapsedCalendarIcon from './collapsed_calendar_icon.vue';\n+  import { dateInWords } from '../../../lib/utils/datetime_utility';\n+\n+  export default {\n+    name: 'sidebarDatePicker',\n+    props: {\n+      collapsed: {\n+        type: Boolean,\n+        required: false,\n+        default: true,\n+      },\n+      showToggleSidebar: {\n+        type: Boolean,\n+        required: false,\n+        default: false,\n+      },\n+      isLoading: {\n+        type: Boolean,\n+        required: false,\n+        default: false,\n+      },\n+      editable: {\n+        type: Boolean,\n+        required: false,\n+        default: false,\n+      },\n+      label: {\n+        type: String,\n+        required: false,\n+        default: 'Date picker',\n+      },\n+      selectedDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      minDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      maxDate: {\n+        type: Date,\n+        required: false,\n+      },\n+    },\n+    data() {\n+      return {\n+        editing: false,\n+      };\n+    },\n+    components: {\n+      datePicker,\n+      toggleSidebar,\n+      loadingIcon,\n+      collapsedCalendarIcon,\n+    },\n+    computed: {\n+      selectedAndEditable() {\n+        return this.selectedDate \u0026\u0026 this.editable;\n+      },\n+      selectedDateWords() {\n+        return dateInWords(this.selectedDate, true);\n+      },\n+      collapsedText() {\n+        return this.selectedDateWords ? this.selectedDateWords : 'None';\n+      },\n+    },\n+    methods: {\n+      stopEditing() {\n+        this.editing = false;\n+      },\n+      toggleDatePicker() {\n+        this.editing = !this.editing;\n+      },\n+      newDateSelected(date = null) {\n+        this.date = date;\n+        this.editing = false;\n+        this.$emit('saveDate', date);\n+      },\n+      toggleSidebar() {\n+        this.$emit('toggleCollapse');\n+      },\n+    },\n+  };\n+\u003c/script\u003e\n+\n+\u003ctemplate\u003e\n+  \u003cdiv class=\"block\"\u003e\n+    \u003cdiv class=\"issuable-sidebar-header\"\u003e\n+      \u003ctoggle-sidebar\n+        :collapsed=\"collapsed\"\n+        @toggle=\"toggleSidebar\"\n+      /\u003e\n+    \u003c/div\u003e\n+    \u003ccollapsed-calendar-icon\n+      class=\"sidebar-collapsed-icon\"\n+      :text=\"collapsedText\"\n+    /\u003e\n+    \u003cdiv class=\"title\"\u003e\n+      {{ label }}\n+      \u003cloading-icon\n+        v-if=\"isLoading\"\n+        :inline=\"true\"\n+      /\u003e\n+      \u003cdiv class=\"pull-right\"\u003e\n+        \u003cbutton\n+          v-if=\"editable \u0026\u0026 !editing\"\n+          type=\"button\"\n+          class=\"btn-blank btn-link btn-primary-hover-link btn-sidebar-action\"\n+          @click=\"toggleDatePicker\"\n+        \u003e\n+          Edit\n+        \u003c/button\u003e\n+        \u003ctoggle-sidebar\n+          v-if=\"showToggleSidebar\"\n+          :collapsed=\"collapsed\"\n+          @toggle=\"toggleSidebar\"\n+        /\u003e\n+      \u003c/div\u003e\n+    \u003c/div\u003e\n+    \u003cdiv class=\"value\"\u003e\n+      \u003cdate-picker\n+        v-if=\"editing\"\n+        :selected-date=\"selectedDate\"\n+        :min-date=\"minDate\"\n+        :max-date=\"maxDate\"\n+        :label=\"label\"\n+        @newDateSelected=\"newDateSelected\"\n+        @hidePicker=\"stopEditing\"\n+      /\u003e\n+      \u003cspan\n+        v-else\n+        class=\"value-content\"\n+      \u003e\n+        \u003ctemplate v-if=\"selectedDate\"\u003e\n+          \u003cstrong\u003e{{ selectedDateWords }}\u003c/strong\u003e\n+          \u003cspan\n+            v-if=\"selectedAndEditable\"\n+            class=\"no-value\"\n+          \u003e\n+            -\n+            \u003cbutton\n+              type=\"button\"\n+              class=\"btn-blank btn-link btn-secondary-hover-link\"\n+              @click=\"newDateSelected(null)\"\n+            \u003e\n+              remove\n+            \u003c/button\u003e\n+          \u003c/span\u003e\n+        \u003c/template\u003e\n+        \u003cspan\n+          v-else\n+          class=\"no-value\"\n+        \u003e\n+          None\n+        \u003c/span\u003e\n+      \u003c/span\u003e\n+    \u003c/div\u003e\n+  \u003c/div\u003e\n+\u003c/template\u003e\n"},{"old_path":"app/assets/javascripts/vue_shared/components/sidebar/toggle_sidebar.vue","new_path":"app/assets/javascripts/vue_shared/components/sidebar/toggle_sidebar.vue","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/app/assets/javascripts/vue_shared/components/sidebar/toggle_sidebar.vue\n@@ -0,0 +1,30 @@\n+\u003cscript\u003e\n+  export default {\n+    name: 'toggleSidebar',\n+    props: {\n+      collapsed: {\n+        type: Boolean,\n+        required: true,\n+      },\n+    },\n+    methods: {\n+      toggle() {\n+        this.$emit('toggle');\n+      },\n+    },\n+  };\n+\u003c/script\u003e\n+\n+\u003ctemplate\u003e\n+  \u003cbutton\n+    type=\"button\"\n+    class=\"btn btn-blank gutter-toggle btn-sidebar-action\"\n+    @click=\"toggle\"\n+  \u003e\n+    \u003ci\n+      aria-label=\"toggle collapse\"\n+      class=\"fa\"\n+      :class=\"{ 'fa-angle-double-right': !collapsed, 'fa-angle-double-left': collapsed }\"\n+    \u003e\u003c/i\u003e\n+  \u003c/button\u003e\n+\u003c/template\u003e\n"},{"old_path":"app/assets/javascripts/vue_shared/components/pikaday.vue","new_path":"app/assets/javascripts/vue_shared/components/pikaday.vue","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/app/assets/javascripts/vue_shared/components/pikaday.vue\n@@ -0,0 +1,79 @@\n+\u003cscript\u003e\n+  import Pikaday from 'pikaday';\n+  import { parsePikadayDate, pikadayToString } from '../../lib/utils/datefix';\n+\n+  export default {\n+    name: 'datePicker',\n+    props: {\n+      label: {\n+        type: String,\n+        required: false,\n+        default: 'Date picker',\n+      },\n+      selectedDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      minDate: {\n+        type: Date,\n+        required: false,\n+      },\n+      maxDate: {\n+        type: Date,\n+        required: false,\n+      },\n+    },\n+    methods: {\n+      selected(dateText) {\n+        this.$emit('newDateSelected', this.calendar.toString(dateText));\n+      },\n+      toggled() {\n+        this.$emit('hidePicker');\n+      },\n+    },\n+    mounted() {\n+      this.calendar = new Pikaday({\n+        field: this.$el.querySelector('.dropdown-menu-toggle'),\n+        theme: 'gitlab-theme animate-picker',\n+        format: 'yyyy-mm-dd',\n+        container: this.$el,\n+        defaultDate: this.selectedDate,\n+        setDefaultDate: !!this.selectedDate,\n+        minDate: this.minDate,\n+        maxDate: this.maxDate,\n+        parse: dateString =\u003e parsePikadayDate(dateString),\n+        toString: date =\u003e pikadayToString(date),\n+        onSelect: this.selected.bind(this),\n+        onClose: this.toggled.bind(this),\n+      });\n+\n+      this.$el.append(this.calendar.el);\n+      this.calendar.show();\n+    },\n+    beforeDestroy() {\n+      this.calendar.destroy();\n+    },\n+  };\n+\u003c/script\u003e\n+\n+\u003ctemplate\u003e\n+  \u003cdiv class=\"pikaday-container\"\u003e\n+    \u003cdiv class=\"dropdown open\"\u003e\n+      \u003cbutton\n+        type=\"button\"\n+        class=\"dropdown-menu-toggle\"\n+        data-toggle=\"dropdown\"\n+        @click=\"toggled\"\n+      \u003e\n+        \u003cspan class=\"dropdown-toggle-text\"\u003e\n+          {{label}}\n+        \u003c/span\u003e\n+        \u003ci\n+          class=\"fa fa-chevron-down\"\n+          aria-hidden=\"true\"\n+        \u003e\n+        \u003c/i\u003e\n+      \u003c/button\u003e\n+    \u003c/div\u003e\n+  \u003c/div\u003e\n+\u003c/template\u003e\n"},{"old_path":"app/assets/stylesheets/framework/buttons.scss","new_path":"app/assets/stylesheets/framework/buttons.scss","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/app/assets/stylesheets/framework/buttons.scss\n+++ b/app/assets/stylesheets/framework/buttons.scss\n@@ -408,6 +408,7 @@\n   padding: 0;\n   background: transparent;\n   border: 0;\n+  border-radius: 0;\n \n   \u0026:hover,\n   \u0026:active,\n@@ -417,3 +418,25 @@\n     box-shadow: none;\n   }\n }\n+\n+.btn-link.btn-secondary-hover-link {\n+  color: $gl-text-color-secondary;\n+\n+  \u0026:hover,\n+  \u0026:active,\n+  \u0026:focus {\n+    color: $gl-link-color;\n+    text-decoration: none;\n+  }\n+}\n+\n+.btn-link.btn-primary-hover-link {\n+  color: inherit;\n+\n+  \u0026:hover,\n+  \u0026:active,\n+  \u0026:focus {\n+    color: $gl-link-color;\n+    text-decoration: none;\n+  }\n+}\n"},{"old_path":"app/assets/stylesheets/framework/sidebar.scss","new_path":"app/assets/stylesheets/framework/sidebar.scss","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/app/assets/stylesheets/framework/sidebar.scss\n+++ b/app/assets/stylesheets/framework/sidebar.scss\n@@ -43,11 +43,13 @@\n   }\n \n   .sidebar-collapsed-icon {\n-    cursor: pointer;\n-\n     .btn {\n       background-color: $gray-light;\n     }\n+\n+    \u0026:not(.disabled) {\n+      cursor: pointer;\n+    }\n   }\n }\n \n@@ -55,6 +57,10 @@\n   padding-right: 0;\n   z-index: 300;\n \n+  .btn-sidebar-action {\n+    display: inline-flex;\n+  }\n+\n   @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {\n     \u0026:not(.wiki-sidebar):not(.build-sidebar):not(.issuable-bulk-update-sidebar) .content-wrapper {\n       padding-right: $gutter_collapsed_width;\n@@ -136,3 +142,18 @@\n .issuable-sidebar {\n   @include new-style-dropdown;\n }\n+\n+.pikaday-container {\n+  .pika-single {\n+    margin-top: 2px;\n+    width: 250px;\n+  }\n+\n+  .dropdown-menu-toggle {\n+    line-height: 20px;\n+  }\n+}\n+\n+.sidebar-collapsed-icon .sidebar-collapsed-value {\n+  font-size: 12px;\n+}\n"},{"old_path":"app/assets/stylesheets/pages/issuable.scss","new_path":"app/assets/stylesheets/pages/issuable.scss","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/app/assets/stylesheets/pages/issuable.scss\n+++ b/app/assets/stylesheets/pages/issuable.scss\n@@ -284,10 +284,15 @@\n       font-weight: $gl-font-weight-normal;\n     }\n \n-    .no-value {\n+    .no-value,\n+    .btn-secondary-hover-link {\n       color: $gl-text-color-secondary;\n     }\n \n+    .btn-secondary-hover-link:hover {\n+      color: $gl-link-color;\n+    }\n+\n     .sidebar-collapsed-icon {\n       display: none;\n     }\n@@ -295,6 +300,8 @@\n     .gutter-toggle {\n       margin-top: 7px;\n       border-left: 1px solid $border-gray-normal;\n+      padding-left: 0;\n+      text-align: center;\n     }\n \n     .title .gutter-toggle {\n@@ -367,7 +374,7 @@\n         fill: $issuable-sidebar-color;\n       }\n \n-      \u0026:hover,\n+      \u0026:hover:not(.disabled),\n       \u0026:hover .todo-undone {\n         color: $gl-text-color;\n \n@@ -908,3 +915,21 @@\n     margin: 0 3px;\n   }\n }\n+\n+.right-sidebar-collapsed {\n+  .sidebar-grouped-item {\n+    .sidebar-collapsed-icon {\n+      margin-bottom: 0;\n+    }\n+\n+    .sidebar-collapsed-divider {\n+      line-height: 5px;\n+      font-size: 12px;\n+      color: $theme-gray-700;\n+\n+      + .sidebar-collapsed-icon {\n+        padding-top: 0;\n+      }\n+    }\n+  }\n+}\n"},{"old_path":"spec/javascripts/lib/utils/text_utility_spec.js","new_path":"spec/javascripts/lib/utils/text_utility_spec.js","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/spec/javascripts/lib/utils/text_utility_spec.js\n+++ b/spec/javascripts/lib/utils/text_utility_spec.js\n@@ -23,6 +23,14 @@ describe('text_utility', () =\u003e {\n     });\n   });\n \n+  describe('capitalizeFirstCharacter', () =\u003e {\n+    it('returns string with first letter capitalized', () =\u003e {\n+      expect(textUtils.capitalizeFirstCharacter('gitlab')).toEqual('Gitlab');\n+      expect(textUtils.highCountTrim(105)).toBe('99+');\n+      expect(textUtils.highCountTrim(100)).toBe('99+');\n+    });\n+  });\n+\n   describe('humanize', () =\u003e {\n     it('should remove underscores and uppercase the first letter', () =\u003e {\n       expect(textUtils.humanize('foo_bar')).toEqual('Foo bar');\n"},{"old_path":"spec/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon_spec.js","new_path":"spec/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon_spec.js","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/spec/javascripts/vue_shared/components/sidebar/collapsed_calendar_icon_spec.js\n@@ -0,0 +1,35 @@\n+import Vue from 'vue';\n+import collapsedCalendarIcon from '~/vue_shared/components/sidebar/collapsed_calendar_icon.vue';\n+import mountComponent from '../../../helpers/vue_mount_component_helper';\n+\n+describe('collapsedCalendarIcon', () =\u003e {\n+  let vm;\n+  beforeEach(() =\u003e {\n+    const CollapsedCalendarIcon = Vue.extend(collapsedCalendarIcon);\n+    vm = mountComponent(CollapsedCalendarIcon, {\n+      containerClass: 'test-class',\n+      text: 'text',\n+      showIcon: false,\n+    });\n+  });\n+\n+  it('should add class to container', () =\u003e {\n+    expect(vm.$el.classList.contains('test-class')).toEqual(true);\n+  });\n+\n+  it('should hide calendar icon if showIcon', () =\u003e {\n+    expect(vm.$el.querySelector('.fa-calendar')).toBeNull();\n+  });\n+\n+  it('should render text', () =\u003e {\n+    expect(vm.$el.querySelector('span').innerText.trim()).toEqual('text');\n+  });\n+\n+  it('should emit click event when container is clicked', () =\u003e {\n+    const click = jasmine.createSpy();\n+    vm.$on('click', click);\n+\n+    vm.$el.click();\n+    expect(click).toHaveBeenCalled();\n+  });\n+});\n"},{"old_path":"spec/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker_spec.js","new_path":"spec/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker_spec.js","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/spec/javascripts/vue_shared/components/sidebar/collapsed_grouped_date_picker_spec.js\n@@ -0,0 +1,91 @@\n+import Vue from 'vue';\n+import collapsedGroupedDatePicker from '~/vue_shared/components/sidebar/collapsed_grouped_date_picker.vue';\n+import mountComponent from '../../../helpers/vue_mount_component_helper';\n+\n+describe('collapsedGroupedDatePicker', () =\u003e {\n+  let vm;\n+  beforeEach(() =\u003e {\n+    const CollapsedGroupedDatePicker = Vue.extend(collapsedGroupedDatePicker);\n+    vm = mountComponent(CollapsedGroupedDatePicker, {\n+      showToggleSidebar: true,\n+    });\n+  });\n+\n+  it('should render toggle sidebar if showToggleSidebar', (done) =\u003e {\n+    expect(vm.$el.querySelector('.issuable-sidebar-header')).toBeDefined();\n+\n+    vm.showToggleSidebar = false;\n+    Vue.nextTick(() =\u003e {\n+      expect(vm.$el.querySelector('.issuable-sidebar-header')).toBeNull();\n+      done();\n+    });\n+  });\n+\n+  it('toggleCollapse events', () =\u003e {\n+    const toggleCollapse = jasmine.createSpy();\n+\n+    beforeEach((done) =\u003e {\n+      vm.minDate = new Date('07/17/2016');\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should emit when sidebar is toggled', () =\u003e {\n+      vm.$el.querySelector('.gutter-toggle').click();\n+      expect(toggleCollapse).toHaveBeenCalled();\n+    });\n+\n+    it('should emit when collapsed-calendar-icon is clicked', () =\u003e {\n+      vm.$el.querySelector('.sidebar-collapsed-icon').click();\n+      expect(toggleCollapse).toHaveBeenCalled();\n+    });\n+  });\n+\n+  describe('minDate and maxDate', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.minDate = new Date('07/17/2016');\n+      vm.maxDate = new Date('07/17/2017');\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render both collapsed-calendar-icon', () =\u003e {\n+      const icons = vm.$el.querySelectorAll('.sidebar-collapsed-icon');\n+      expect(icons.length).toEqual(2);\n+      expect(icons[0].innerText.trim()).toEqual('Jul 17 2016');\n+      expect(icons[1].innerText.trim()).toEqual('Jul 17 2017');\n+    });\n+  });\n+\n+  describe('minDate', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.minDate = new Date('07/17/2016');\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render minDate in collapsed-calendar-icon', () =\u003e {\n+      const icons = vm.$el.querySelectorAll('.sidebar-collapsed-icon');\n+      expect(icons.length).toEqual(1);\n+      expect(icons[0].innerText.trim()).toEqual('From Jul 17 2016');\n+    });\n+  });\n+\n+  describe('maxDate', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.maxDate = new Date('07/17/2017');\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render maxDate in collapsed-calendar-icon', () =\u003e {\n+      const icons = vm.$el.querySelectorAll('.sidebar-collapsed-icon');\n+      expect(icons.length).toEqual(1);\n+      expect(icons[0].innerText.trim()).toEqual('Until Jul 17 2017');\n+    });\n+  });\n+\n+  describe('no dates', () =\u003e {\n+    it('should render None', () =\u003e {\n+      const icons = vm.$el.querySelectorAll('.sidebar-collapsed-icon');\n+      expect(icons.length).toEqual(1);\n+      expect(icons[0].innerText.trim()).toEqual('None');\n+    });\n+  });\n+});\n"},{"old_path":"spec/javascripts/vue_shared/components/sidebar/date_picker_spec.js","new_path":"spec/javascripts/vue_shared/components/sidebar/date_picker_spec.js","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/spec/javascripts/vue_shared/components/sidebar/date_picker_spec.js\n@@ -0,0 +1,117 @@\n+import Vue from 'vue';\n+import sidebarDatePicker from '~/vue_shared/components/sidebar/date_picker.vue';\n+import mountComponent from '../../../helpers/vue_mount_component_helper';\n+\n+describe('sidebarDatePicker', () =\u003e {\n+  let vm;\n+  beforeEach(() =\u003e {\n+    const SidebarDatePicker = Vue.extend(sidebarDatePicker);\n+    vm = mountComponent(SidebarDatePicker, {\n+      label: 'label',\n+      isLoading: true,\n+    });\n+  });\n+\n+  it('should emit toggleCollapse when collapsed toggle sidebar is clicked', () =\u003e {\n+    const toggleCollapse = jasmine.createSpy();\n+    vm.$on('toggleCollapse', toggleCollapse);\n+\n+    vm.$el.querySelector('.issuable-sidebar-header .gutter-toggle').click();\n+    expect(toggleCollapse).toHaveBeenCalled();\n+  });\n+\n+  it('should render collapsed-calendar-icon', () =\u003e {\n+    expect(vm.$el.querySelector('.sidebar-collapsed-icon')).toBeDefined();\n+  });\n+\n+  it('should render label', () =\u003e {\n+    expect(vm.$el.querySelector('.title').innerText.trim()).toEqual('label');\n+  });\n+\n+  it('should render loading-icon when isLoading', () =\u003e {\n+    expect(vm.$el.querySelector('.fa-spin')).toBeDefined();\n+  });\n+\n+  it('should render value when not editing', () =\u003e {\n+    expect(vm.$el.querySelector('.value-content')).toBeDefined();\n+  });\n+\n+  it('should render None if there is no selectedDate', () =\u003e {\n+    expect(vm.$el.querySelector('.value-content span').innerText.trim()).toEqual('None');\n+  });\n+\n+  it('should render date-picker when editing', (done) =\u003e {\n+    vm.editing = true;\n+    Vue.nextTick(() =\u003e {\n+      expect(vm.$el.querySelector('.pika-label')).toBeDefined();\n+      done();\n+    });\n+  });\n+\n+  describe('editable', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.editable = true;\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render edit button', () =\u003e {\n+      expect(vm.$el.querySelector('.title .btn-blank').innerText.trim()).toEqual('Edit');\n+    });\n+\n+    it('should enable editing when edit button is clicked', (done) =\u003e {\n+      vm.isLoading = false;\n+      Vue.nextTick(() =\u003e {\n+        vm.$el.querySelector('.title .btn-blank').click();\n+        expect(vm.editing).toEqual(true);\n+        done();\n+      });\n+    });\n+  });\n+\n+  it('should render date if selectedDate', (done) =\u003e {\n+    vm.selectedDate = new Date('07/07/2017');\n+    Vue.nextTick(() =\u003e {\n+      expect(vm.$el.querySelector('.value-content strong').innerText.trim()).toEqual('Jul 7, 2017');\n+      done();\n+    });\n+  });\n+\n+  describe('selectedDate and editable', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.selectedDate = new Date('07/07/2017');\n+      vm.editable = true;\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render remove button if selectedDate and editable', () =\u003e {\n+      expect(vm.$el.querySelector('.value-content .btn-blank').innerText.trim()).toEqual('remove');\n+    });\n+\n+    it('should emit saveDate when remove button is clicked', () =\u003e {\n+      const saveDate = jasmine.createSpy();\n+      vm.$on('saveDate', saveDate);\n+\n+      vm.$el.querySelector('.value-content .btn-blank').click();\n+      expect(saveDate).toHaveBeenCalled();\n+    });\n+  });\n+\n+  describe('showToggleSidebar', () =\u003e {\n+    beforeEach((done) =\u003e {\n+      vm.showToggleSidebar = true;\n+      Vue.nextTick(done);\n+    });\n+\n+    it('should render toggle-sidebar when showToggleSidebar', () =\u003e {\n+      expect(vm.$el.querySelector('.title .gutter-toggle')).toBeDefined();\n+    });\n+\n+    it('should emit toggleCollapse when toggle sidebar is clicked', () =\u003e {\n+      const toggleCollapse = jasmine.createSpy();\n+      vm.$on('toggleCollapse', toggleCollapse);\n+\n+      vm.$el.querySelector('.title .gutter-toggle').click();\n+      expect(toggleCollapse).toHaveBeenCalled();\n+    });\n+  });\n+});\n"},{"old_path":"spec/javascripts/vue_shared/components/sidebar/toggle_sidebar_spec.js","new_path":"spec/javascripts/vue_shared/components/sidebar/toggle_sidebar_spec.js","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/spec/javascripts/vue_shared/components/sidebar/toggle_sidebar_spec.js\n@@ -0,0 +1,32 @@\n+import Vue from 'vue';\n+import toggleSidebar from '~/vue_shared/components/sidebar/toggle_sidebar.vue';\n+import mountComponent from '../../../helpers/vue_mount_component_helper';\n+\n+describe('toggleSidebar', () =\u003e {\n+  let vm;\n+  beforeEach(() =\u003e {\n+    const ToggleSidebar = Vue.extend(toggleSidebar);\n+    vm = mountComponent(ToggleSidebar, {\n+      collapsed: true,\n+    });\n+  });\n+\n+  it('should render \u003c\u003c when collapsed', () =\u003e {\n+    expect(vm.$el.querySelector('.fa').classList.contains('fa-angle-double-left')).toEqual(true);\n+  });\n+\n+  it('should render \u003e\u003e when collapsed', () =\u003e {\n+    vm.collapsed = false;\n+    Vue.nextTick(() =\u003e {\n+      expect(vm.$el.querySelector('.fa').classList.contains('fa-angle-double-right')).toEqual(true);\n+    });\n+  });\n+\n+  it('should emit toggle event when button clicked', () =\u003e {\n+    const toggle = jasmine.createSpy();\n+    vm.$on('toggle', toggle);\n+    vm.$el.click();\n+\n+    expect(toggle).toHaveBeenCalled();\n+  });\n+});\n"},{"old_path":"spec/javascripts/vue_shared/components/pikaday_spec.js","new_path":"spec/javascripts/vue_shared/components/pikaday_spec.js","a_mode":"0","b_mode":"100644","new_file":true,"renamed_file":false,"deleted_file":false,"diff":"--- /dev/null\n+++ b/spec/javascripts/vue_shared/components/pikaday_spec.js\n@@ -0,0 +1,29 @@\n+import Vue from 'vue';\n+import datePicker from '~/vue_shared/components/pikaday.vue';\n+import mountComponent from '../../helpers/vue_mount_component_helper';\n+\n+describe('datePicker', () =\u003e {\n+  let vm;\n+  beforeEach(() =\u003e {\n+    const DatePicker = Vue.extend(datePicker);\n+    vm = mountComponent(DatePicker, {\n+      label: 'label',\n+    });\n+  });\n+\n+  it('should render label text', () =\u003e {\n+    expect(vm.$el.querySelector('.dropdown-toggle-text').innerText.trim()).toEqual('label');\n+  });\n+\n+  it('should show calendar', () =\u003e {\n+    expect(vm.$el.querySelector('.pika-single')).toBeDefined();\n+  });\n+\n+  it('should toggle when dropdown is clicked', () =\u003e {\n+    const hidePicker = jasmine.createSpy();\n+    vm.$on('hidePicker', hidePicker);\n+\n+    vm.$el.querySelector('.dropdown-menu-toggle').click();\n+    expect(hidePicker).toHaveBeenCalled();\n+  });\n+});\n"},{"old_path":"spec/javascripts/datetime_utility_spec.js","new_path":"spec/javascripts/datetime_utility_spec.js","a_mode":"100644","b_mode":"100644","new_file":false,"renamed_file":false,"deleted_file":false,"diff":"--- a/spec/javascripts/datetime_utility_spec.js\n+++ b/spec/javascripts/datetime_utility_spec.js\n@@ -1,4 +1,4 @@\n-import { timeIntervalInWords } from '~/lib/utils/datetime_utility';\n+import * as datetimeUtility from '~/lib/utils/datetime_utility';\n \n (() =\u003e {\n   describe('Date time utils', () =\u003e {\n@@ -89,10 +89,22 @@ import { timeIntervalInWords } from '~/lib/utils/datetime_utility';\n \n   describe('timeIntervalInWords', () =\u003e {\n     it('should return string with number of minutes and seconds', () =\u003e {\n-      expect(timeIntervalInWords(9.54)).toEqual('9 seconds');\n-      expect(timeIntervalInWords(1)).toEqual('1 second');\n-      expect(timeIntervalInWords(200)).toEqual('3 minutes 20 seconds');\n-      expect(timeIntervalInWords(6008)).toEqual('100 minutes 8 seconds');\n+      expect(datetimeUtility.timeIntervalInWords(9.54)).toEqual('9 seconds');\n+      expect(datetimeUtility.timeIntervalInWords(1)).toEqual('1 second');\n+      expect(datetimeUtility.timeIntervalInWords(200)).toEqual('3 minutes 20 seconds');\n+      expect(datetimeUtility.timeIntervalInWords(6008)).toEqual('100 minutes 8 seconds');\n+    });\n+  });\n+\n+  describe('dateInWords', () =\u003e {\n+    const date = new Date('07/01/2016');\n+\n+    it('should return date in words', () =\u003e {\n+      expect(datetimeUtility.dateInWords(date)).toEqual('July 1, 2016');\n+    });\n+\n+    it('should return abbreviated month name', () =\u003e {\n+      expect(datetimeUtility.dateInWords(date, true)).toEqual('Jul 1, 2016');\n     });\n   });\n })();\n"}],"overflow":false}