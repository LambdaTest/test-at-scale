// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	core "github.com/LambdaTest/synapse/pkg/core"
	mock "github.com/stretchr/testify/mock"
)

// TASConfigManager is an autogenerated mock type for the TASConfigManager type
type TASConfigManager struct {
	mock.Mock
}

// LoadConfig provides a mock function with given fields: ctx, path, eventType, parseMode
func (_m *TASConfigManager) LoadConfig(ctx context.Context, path string, eventType core.EventType, parseMode bool) (*core.TASConfig, error) {
	ret := _m.Called(ctx, path, eventType, parseMode)

	var r0 *core.TASConfig
	if rf, ok := ret.Get(0).(func(context.Context, string, core.EventType, bool) *core.TASConfig); ok {
		r0 = rf(ctx, path, eventType, parseMode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.TASConfig)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, core.EventType, bool) error); ok {
		r1 = rf(ctx, path, eventType, parseMode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
