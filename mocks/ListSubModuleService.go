// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ListSubModuleService is an autogenerated mock type for the ListSubModuleService type
type ListSubModuleService struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, buildID, totalSubmodule
func (_m *ListSubModuleService) Send(ctx context.Context, buildID string, totalSubmodule int) error {
	ret := _m.Called(ctx, buildID, totalSubmodule)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, int) error); ok {
		r0 = rf(ctx, buildID, totalSubmodule)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewListSubModuleService interface {
	mock.TestingT
	Cleanup(func())
}

// NewListSubModuleService creates a new instance of ListSubModuleService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewListSubModuleService(t mockConstructorTestingTNewListSubModuleService) *ListSubModuleService {
	mock := &ListSubModuleService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
