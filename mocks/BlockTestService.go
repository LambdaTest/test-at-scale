// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BlockTestService is an autogenerated mock type for the BlockTestService type
type BlockTestService struct {
	mock.Mock
}

// GetBlockTests provides a mock function with given fields: ctx, blocklistYAML, branch
func (_m *BlockTestService) GetBlockTests(ctx context.Context, blocklistYAML []string, branch string) error {
	ret := _m.Called(ctx, blocklistYAML, branch)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string, string) error); ok {
		r0 = rf(ctx, blocklistYAML, branch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBlockTestService interface {
	mock.TestingT
	Cleanup(func())
}

// NewBlockTestService creates a new instance of BlockTestService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBlockTestService(t mockConstructorTestingTNewBlockTestService) *BlockTestService {
	mock := &BlockTestService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
